#!/bin/bash
set -e
: ${DEBUG:=0} # Enable debug messages by prepending DEBUG=1
################################################################################
######                           USER SETTINGS                            ######
################################################################################
# Path to the devilspie2 config file for MPV.
dp2_conf="~/.config/devilspie2/MPV Wallpaper.lua"

# If you want this script to automatically calculate the resolution, so that
# the video file fills the entire screen, you should set this to "true".
# Otherwise you will have to manually edit the config file defined above.
# Options: true/false
automaticResolution=true

# Choose a hardware decoder. Which type you can use depends on your hardware,
# but it will significantly reduce the load on the system of one can be used.
# Options: none/auto/intel/nvidia
hwDecoder="auto"

# Choose which scaler algorithm that will be used when resizing the video feed.
# Slower scalers produce better looking results, but some might be too
# demanding for your system.
# Options: fast/medium/slow
scaler="medium"

################################################################################
######                  SCRIPT STUFF - MAYBE DON'T TOUCH                  ######
################################################################################
# `cd` to the directory which contains the current script that is being executed
# (or sourced), get the working directory, and source a file called "utils".
# This file contains all the nice functions we would like to use.
. "$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"/utils

# Catch the first input argument of this script and store it as the "video_file"
# to work with, as well as its extension.
video_file=$1
ext=${video_file##*.}

# Make sure that we have been given a real file.
checkVideoFile

# Verify that the devilspie2 config file actually exist.
checkConfigPath

# Check if devilspie2 is running, and start it if so is not the case.
checkDevilspieStatus

# If true, then calculate the best resolution and position for the MPV window.
if [ "${automaticResolution}" = "true" ]; then
    info "Automatic resolution is enabled"
    setFillEntireScreen
else
    info "Automatic resolution is disabled"
fi

# Construct the desired call to MPV to play the video file.
mpv_cmd="nohup" # Ignore the HUP (hangup) signal.
mpv_cmd+=" mpv '${video_file}'" # Give MPV the video file.
mpv_cmd+=" --no-audio" # Disable audio.
mpv_cmd+=" --loop" # Make the video file loop for all eternity.
mpv_cmd+=" --no-input-default-bindings" # Disable any key bindings used by MPV.
mpv_cmd+=" --no-osc" # Disable the on-screen-controller.
mpv_cmd+=" --title=\"MPV Wallpaper\"" # Title of the MPV Window (Must be the
                                      # same as what is in the "dp2_conf" file).
# Set the chosen decoder option.
case "${hwDecoder}" in
    none)
        # Force software decoding.
        debug "Using 'software' decoder"
        mpv_cmd+=" --hwdec=no"
        ;;
    auto)
        # Let MPV try to find the best setting by itself.
        debug "Using 'automatic' decoder"
        mpv_cmd+=" --hwdec=auto"
        ;;
    intel)
        # Use the Intel hardware decoder.
        debug "Using 'Intel' decoder"
        mpv_cmd+=" --hwdec=vaapi --vo=vaapi"
        ;;
    nvidia)
        # Use the Nvidia hardware decoder.
        debug "Using 'Nvidia' decoder"
        mpv_cmd+=" --hwdec=vdpau --vo=vdpau"
        ;;
    *)
        # Default to automatic detection.
        warning "Unknown decoder option '${hwDecoder}', defaulting to 'auto'"
        mpv_cmd+=" --hwdec=auto"
        ;;
esac
# Set the chosen scaler option.
case "${scaler}" in
    fast)
        # Fastest, low quality.
        debug "Using 'fast' scaler"
        mpv_cmd+=" --scale=bilinear"
        ;;
    medium)
        # Medium quality and speed.
        debug "Using 'medium' scaler"
        mpv_cmd+=" --scale=spline36"
        ;;
    slow)
        # If your hardware can run it, this is probably what you should use.
        debug "Using 'slow' scaler"
        mpv_cmd+=" --scale=ewa_lanczossharp"
        ;;
    *)
        # Default for compatibility reasons.
        warning "Unknown scaler option '${scaler}', defaulting to 'fast'"
        mpv_cmd+=" --scale=bilinear"
        ;;
esac
mpv_cmd+=" >/dev/null 2>&1" # Redirect any output.
mpv_cmd+=" &" # Detach from this script.

# Execute command
debug "Full MPV command: '${mpv_cmd}'"
info "Setting '${video_file##*/}' as a living background"
eval ${mpv_cmd}
